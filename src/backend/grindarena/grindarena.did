type Competition = record {
  id : text;
  title : text;
  description : text;
  level : Level;
  prize_pool : nat64;
  ended_at : SystemTime;
  category_id : text;
  rules : vec text;
  started_at : SystemTime;
};
type CreateCompetitionInput = record {
  title : text;
  description : text;
  level : Level;
  prize_pool : nat64;
  ended_at : SystemTime;
  category_id : text;
  rules : vec text;
  started_at : SystemTime;
};
type CreateParticipantInput = record {
  user_id : principal;
  competition_id : text;
};
type CreateSubmissionInput = record {
  content : text;
  user_id : principal;
  competition_id : text;
};
type Level = variant { Beginner; Advanced; Intermediate };
type Participant = record {
  id : text;
  user_id : principal;
  score : opt nat64;
  competition_id : text;
};
type Submission = record {
  id : text;
  content : text;
  user_id : principal;
  competition_id : text;
  submitted_at : SystemTime;
};
type SystemTime = record {
  nanos_since_epoch : nat32;
  secs_since_epoch : nat64;
};
service : {
  create_competition : (CreateCompetitionInput) -> (text);
  create_participant : (CreateParticipantInput) -> (text);
  create_submission : (CreateSubmissionInput) -> (text);
  get_all_competitions : () -> (vec Competition) query;
  get_all_participants : (text) -> (vec Participant) query;
  get_all_submissions : (text) -> (vec Submission) query;
  seeder_all : () -> ();
}
